"use strict";var io;angular.module("wbApp",["ngAnimate","btford.socket-io","ngRoute","ngSanitize"]).factory("mySocket",["socketFactory",function(a){var b=io.connect("http://"+location.hostname+":5000/event"),c=a({ioSocket:b});return c}]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/home.html",controller:"MainCtrl"}).when("/responses",{templateUrl:"views/responses.html",controller:"ResponseCtrl"}).when("/responses/:FILE",{templateUrl:"views/responseView.html",controller:"ResponseViewCtrl"})}]),angular.module("wbApp").controller("MainCtrl",["$scope","$rootScope","mySocket",function(a,b,c){this.username="",this.usernameSet=!1,a.messages=[],a.connection={},a.connection.status="Not Connected",c.on("connecting",function(){a.connection.status="Connecting"}),c.on("connect",function(){a.connection.status="Connected"}),c.on("reconnecting",function(){a.connection.status="Reconnecting"}),c.on("disconnect",function(){a.connection.status="Disconnect"}),c.on("response",function(b){var c={};c.user="Philip the Robot",c.time="Now",c.text=b,c.server=!0,a.messages.push(c)}),a.sendMessage=function(){if(this.inputText){c.emit("annotate",this.inputText);var b={};b.user="Me",b.time="Now",b.text=this.inputText,b.server=!1,a.messages.push(b),this.inputText=""}},a.sayHello=function(){var b={};b.user="Philip the Robot",b.time="Now",b.text="Nice to meet you "+this.username+"! You can tell me everything.",b.server=!0,a.messages.push(b)},a.submit=function(){this.sendMessage()}}]),angular.module("wbApp").controller("ResponseCtrl",["$scope","$rootScope","$routeParams","$http",function(a,b,c,d){b.bodyClass="response-editor",a.files=[],a.getFiles=function(){d.get("http://"+location.hostname+":5000/responses").then(function(b){a.files=b.data},function(a){})},a.getFiles()}]),angular.module("wbApp").controller("ResponseViewCtrl",["$scope","$rootScope","$routeParams","$http",function(a,b,c,d){b.bodyClass="response-editor",a.file=c.FILE,a.positives=[],a.neutrals=[],a.negatives=[],a.beautify=function(a){var b=a.replace("<type>",'<span class="highlight-type">&lt;type&gt;</span>');return b},a.addResponse=function(b){var c={};c.text="New response with <type>",c.styled=a.beautify(c.text),c.edit=!1,b.push(c)},a.removeResponse=function(a){var b=confirm("Are you sure you want to remove the last response?");b===!0&&a.pop()},a.saveResponses=function(){var b={};b.positive=a.positives.map(function(a){return{question:a.text}}),b.neutral=a.neutrals.map(function(a){return{question:a.text}}),b.negative=a.negatives.map(function(a){return{question:a.text}}),d.post("http://"+location.hostname+":5000/responses/"+a.file,b).then(function(b){a.getFile()})},a.getFile=function(){d.get("http://"+location.hostname+":5000/responses/"+a.file).then(function(b){a.entityType=b.data.type,a.positives=[],a.neutrals=[],a.negatives=[];var c,d,e=b.data.responses.positive;for(d=0;d<e.length;d++)c={},c.text=e[d].question,c.styled=a.beautify(c.text),c.edit=!1,a.positives.push(c);var f=b.data.responses.neutral;for(d=0;d<f.length;d++)c={},c.text=f[d].question,c.styled=a.beautify(c.text),c.edit=!1,a.neutrals.push(c);var g=b.data.responses.negative;for(d=0;d<g.length;d++)c={},c.text=g[d].question,c.styled=a.beautify(c.text),c.edit=!1,a.negatives.push(c)},function(a){})},a.getFile()}]).controller("EditResponseCtrl",["$scope","$element","$timeout",function(a,b,c){var d=$("input",b);a.updateResponse=function(){a.response.edit=!a.response.edit,a.response.styled=a.beautify(a.response.text)},a.$watch("response.edit",function(a,b){a===!0&&c(function(){d.focus()})})}]),angular.module("wbApp").run(["$templateCache",function(a){a.put("views/home.html",'<div class="container"> <div class="header clearfix"> <h3 class="text-muted">VUBot</h3> </div> <div ng-include="\'views/main.html\'" ng-controller="MainCtrl"></div> </div> <div class="footer"> <div class="container"> <p><span class="glyphicon glyphicon-heart"></span> Jasper van der Stoop</p> </div> </div>'),a.put("views/main.html",'<div class="jumbotron"> <div class="msg-header"> <h2>{{ connection.status }}</h2> </div> <div class="msg-overview"> <div ng-repeat="message in messages"> <div class="msg" ng-class="{\'msg-server\': message.server, \'msg-client\': !message.server}"> <div class="msg-body"> <span>{{ message.text }}</span> </div> <div class="msg-user"> <span>{{ message.user }}, {{ message.time }}</span> </div> </div> <div class="clearfix"></div> </div> </div> <div class="msg-input"> <form ng-submit="submit()"> <input ng-model="inputText" type="text" placeholder="Enter some text" name="sentence" autocomplete="off"> </form> </div> </div> <!--\n<div class="row marketing">\n  <h4>HTML5 Boilerplate</h4>\n  <p>\n    HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites.\n  </p>\n\n  <h4>Angular</h4>\n  <p>\n    AngularJS is a toolset for building the framework most suited to your application development.\n  </p>\n\n  <h4>Karma</h4>\n  <p>Spectacular Test Runner for JavaScript.</p>\n</div>\n-->'),a.put("views/responseView.html",'<p class="go-back"><a href="#!/responses">Go Back</a></p> <div class="code-container"> <div class="spacer-top"></div> <p class="type">Type: <strong>{{entity_type}}</strong></p> <p class="box-text">Positive Emotions</p> <pre>\n    <div ng-repeat="response in positives" ng-controller="EditResponseCtrl">\n      <p ng-show="!response.edit" ng-click="response.edit = !response.edit" ng-bind-html="response.styled"></p>\n      <p ng-show="response.edit"><input focus-on="edit-response" class="edit-response" ng-blur="updateResponse()" type="text" ng-model="response.text"></p>\n    </div>\n  </pre> <button class="add-response" ng-click="addResponse(positives)">Add Response</button> <button class="remove-response" ng-click="removeResponse(positives)">Remove Last Response</button> <div class="spacer"></div> <p class="box-text">Neutral Emotions</p> <pre>\n    <div ng-repeat="response in neutrals" ng-controller="EditResponseCtrl">\n      <p ng-show="!response.edit" ng-click="response.edit = !response.edit" ng-bind-html="response.styled"></p>\n      <p ng-show="response.edit"><input focus-on="edit-response" class="edit-response" ng-blur="updateResponse()" type="text" ng-model="response.text"></p>\n    </div>\n  </pre> <button class="add-response" ng-click="addResponse(neutrals)">Add Response</button> <button class="remove-response" ng-click="removeResponse(neutrals)">Remove Last Response</button> <div class="spacer"></div> <p class="box-text">Negative Emotions</p> <pre>\n    <div ng-repeat="response in negatives" ng-controller="EditResponseCtrl">\n      <p ng-show="!response.edit" ng-click="response.edit = !response.edit" ng-bind-html="response.styled"></p>\n      <p ng-show="response.edit"><input focus-on="edit-response" class="edit-response" ng-blur="updateResponse()" type="text" ng-model="response.text"></p>\n    </div>\n  </pre> <button class="add-response" ng-click="addResponse(negatives)">Add Response</button> <button class="remove-response" ng-click="removeResponse(negatives)">Remove Last Response</button> <br> <button class="save-responses" ng-click="saveResponses()">Save Responses!</button> </div>'),a.put("views/responses.html",'<div class="code-container"> <div class="spacer-top"></div> <pre>\n    <p>Select the Response file that you want to view/edit!</p>\n    <p ng-repeat="file in files">	<a ng-href="#!/responses/{{file}}">{{file}}</a></p>\n  </pre> </div>')}]);